<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.smartcloudplatform.mapper.RolePermissionsMapper">

    <resultMap type="RolePermissions" id="RolePermissionsResult">
        <result property="roleId"         column="roleID"        />
        <result property="permissionId"   column="permissionID"  />
        <result property="createBy"       column="create_by"     />
        <result property="createTime"     column="create_time"   />
        <result property="updateBy"       column="update_by"     />
        <result property="updateTime"     column="update_time"   />
        <result property="remark"         column="remark"        />
        <association property="role"       column="roleID" javaType="Role" resultMap="org.example.smartcloudplatform.mapper.RoleMapper.RoleResult" />
        <association property="permission" column="permissionID" javaType="Permission" resultMap="org.example.smartcloudplatform.mapper.PermissionMapper.PermissionResult" />
    </resultMap>

    <sql id="selectRolePermissionsVo">
        select rp.roleID, rp.permissionID, rp.create_by, rp.create_time, rp.update_by, rp.update_time, rp.remark
        from RolePermissions rp
    </sql>

    <select id="selectRolePermissionsByRoleId" parameterType="Long" resultMap="RolePermissionsResult">
        <include refid="selectRolePermissionsVo"/>
        where rp.roleID = #{roleId}
    </select>

    <select id="selectRolePermissionsByPermissionId" parameterType="Long" resultMap="RolePermissionsResult">
        <include refid="selectRolePermissionsVo"/>
        where rp.permissionID = #{permissionId}
    </select>

    <insert id="insertRolePermissions" parameterType="RolePermissions">
        insert into RolePermissions(
            roleID, permissionID,
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="remark != null and remark != ''">remark,</if>
            create_time
        )values(
            #{roleId}, #{permissionId},
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="remark != null and remark != ''">#{remark},</if>
            sysdate()
        )
    </insert>

    <insert id="batchInsertRolePermissions" parameterType="java.util.Map">
        insert into RolePermissions(roleID, permissionID, create_time) values
        <foreach collection="permissionIds" item="permissionId" separator=",">
            (#{roleId}, #{permissionId}, sysdate())
        </foreach>
    </insert>

    <delete id="deleteRolePermissions">
        delete from RolePermissions where roleID = #{roleId} and permissionID = #{permissionId}
    </delete>

    <delete id="deleteRolePermissionsByRoleId" parameterType="Long">
        delete from RolePermissions where roleID = #{roleId}
    </delete>

    <delete id="deleteRolePermissionsByPermissionId" parameterType="Long">
        delete from RolePermissions where permissionID = #{permissionId}
    </delete>

    <delete id="deleteRolePermissionsByRoleIds" parameterType="Long">
        delete from RolePermissions where roleID in
        <foreach collection="array" item="roleId" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </delete>

</mapper> 