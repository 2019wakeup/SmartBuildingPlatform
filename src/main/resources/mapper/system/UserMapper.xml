<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.smartcloudplatform.mapper.UserMapper">

    <resultMap type="User" id="UserResult">
        <id     property="userId"       column="userID"        />
        <result property="userName"     column="userName"      />
        <result property="account"      column="account"       />
        <result property="email"        column="email"         />
        <result property="phone"        column="phone"         />
        <result property="roleId"       column="roleID"        />
        <result property="sampleId"     column="sampleID"      />
        <result property="status"       column="status"        />
        <result property="delFlag"      column="del_flag"      />
        <result property="createBy"     column="create_by"     />
        <result property="createTime"   column="create_time"   />
        <result property="updateBy"     column="update_by"     />
        <result property="updateTime"   column="update_time"   />
        <result property="remark"       column="remark"        />
    </resultMap>

    <sql id="selectUserVo">
        select u.userID, u.userName, u.account, u.email, u.phone, u.roleID, u.sampleID, u.status, u.del_flag, u.create_by, u.create_time, u.remark
        from User u
    </sql>

    <select id="selectUserList" parameterType="User" resultMap="UserResult">
        <include refid="selectUserVo"/>
        <where>
            <if test="userId != null and userId != 0">
                AND u.userID = #{userId}
            </if>
            <if test="userName != null and userName != ''">
                AND u.userName like concat('%', #{userName}, '%')
            </if>
            <if test="status != null and status != ''">
                AND u.status = #{status}
            </if>
            <if test="phone != null and phone != ''">
                AND u.phone like concat('%', #{phone}, '%')
            </if>
        </where>
    </select>

    <select id="selectAllocatedList" parameterType="User" resultMap="UserResult">
        <include refid="selectUserVo"/>
        left join UserRoles ur on u.userID = ur.userID
        left join Role r on r.roleID = ur.roleID
        <where>
            <if test="userName != null and userName != ''">
                AND u.userName like concat('%', #{userName}, '%')
            </if>
            <if test="phone != null and phone != ''">
                AND u.phone like concat('%', #{phone}, '%')
            </if>
            <!-- 根据角色ID进行过滤 -->
            AND r.roleID = #{roleId}
        </where>
    </select>

    <select id="selectUnallocatedList" parameterType="User" resultMap="UserResult">
        <include refid="selectUserVo"/>
        left join UserRoles ur on u.userID = ur.userID
        left join Role r on r.roleID = ur.roleID
        <where>
            <if test="userName != null and userName != ''">
                AND u.userName like concat('%', #{userName}, '%')
            </if>
            <if test="phone != null and phone != ''">
                AND u.phone like concat('%', #{phone}, '%')
            </if>
            AND (r.roleID != #{roleId} or r.roleID IS NULL)
        </where>
    </select>

    <select id="selectUserByUserName" parameterType="String" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where u.userName = #{userName} and u.del_flag = '0'
    </select>

    <select id="selectUserByAccount" parameterType="String" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where u.account = #{account} and u.del_flag = '0'
    </select>

    <select id="selectUserById" parameterType="Long" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where u.userID = #{userId}
    </select>

    <select id="checkUserNameUnique" parameterType="String" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where u.userName = #{userName} and u.del_flag = '0' limit 1
    </select>

    <select id="checkPhoneUnique" parameterType="String" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where u.phone = #{phone} and u.del_flag = '0' limit 1
    </select>

    <select id="checkEmailUnique" parameterType="String" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where u.email = #{email} and u.del_flag = '0' limit 1
    </select>

    <insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyProperty="userId">
        insert into User(
        <if test="userId != null and userId != 0">userID,</if>
        <if test="userName != null and userName != ''">userName,</if>
        <if test="account != null and account != ''">account,</if>
        <if test="password != null and password != ''">password,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="phone != null and phone != ''">phone,</if>
        <if test="roleId != null and roleId != 0">roleID,</if>
        <if test="sampleId != null and sampleId != 0">sampleID,</if>
        <if test="status != null and status != ''">status,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        <if test="remark != null and remark != ''">remark,</if>
        create_time
        )values(
        <if test="userId != null and userId != ''">#{userId},</if>
        <if test="userName != null and userName != ''">#{userName},</if>
        <if test="account != null and account != ''">#{account},</if>
        <if test="password != null and password != ''">#{password},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="phone != null and phone != ''">#{phone},</if>
        <if test="roleId != null and roleId != 0">#{roleId},</if>
        <if test="sampleId != null and sampleId != 0">#{sampleId},</if>
        <if test="status != null and status != ''">#{status},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        sysdate()
        )
    </insert>

    <update id="updateUser" parameterType="User">
        update User
        <set>
            <if test="userName != null and userName != ''">userName = #{userName},</if>
            <if test="account != null and account != ''">account = #{account},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="roleId != null and roleId != 0">roleID = #{roleId},</if>
            <if test="sampleId != null and sampleId != 0">sampleID = #{sampleId},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
            update_time = sysdate()
        </set>
        where userID = #{userId}
    </update>

    <update id="updateUserAvatar" parameterType="String">
        update User set avatar = #{avatar} where userName = #{userName}
    </update>

    <update id="resetUserPwd" parameterType="String">
        update User set password = #{password} where userName = #{userName}
    </update>

    <delete id="deleteUserById" parameterType="Long">
        update User set del_flag = '2' where userID = #{userId}
    </delete>

    <delete id="deleteUserByIds" parameterType="Long">
        update User set del_flag = '2' where userID in
        <foreach collection="array" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper> 